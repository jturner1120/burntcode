{
  "_args": [
    [
      {
        "raw": "sparkpost@^2.1.0",
        "scope": null,
        "escapedName": "sparkpost",
        "name": "sparkpost",
        "rawSpec": "^2.1.0",
        "spec": ">=2.1.0 <3.0.0",
        "type": "range"
      },
      "C:\\Users\\jefft\\burntcode\\appdev\\node_modules\\nodemailer-sparkpost-transport"
    ]
  ],
  "_from": "sparkpost@>=2.1.0 <3.0.0",
  "_id": "sparkpost@2.1.2",
  "_inCache": true,
  "_location": "/sparkpost",
  "_nodeVersion": "6.9.2",
  "_npmOperationalInternal": {
    "host": "packages-18-east.internal.npmjs.com",
    "tmp": "tmp/sparkpost-2.1.2.tgz_1484922113289_0.2354421589989215"
  },
  "_npmUser": {
    "name": "aydrian",
    "email": "aydrian@gmail.com"
  },
  "_npmVersion": "3.10.9",
  "_phantomChildren": {},
  "_requested": {
    "raw": "sparkpost@^2.1.0",
    "scope": null,
    "escapedName": "sparkpost",
    "name": "sparkpost",
    "rawSpec": "^2.1.0",
    "spec": ">=2.1.0 <3.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/nodemailer-sparkpost-transport"
  ],
  "_resolved": "https://registry.npmjs.org/sparkpost/-/sparkpost-2.1.2.tgz",
  "_shasum": "efeee98fa091598b4d6d72b32e487d7a86c7e95c",
  "_shrinkwrap": null,
  "_spec": "sparkpost@^2.1.0",
  "_where": "C:\\Users\\jefft\\burntcode\\appdev\\node_modules\\nodemailer-sparkpost-transport",
  "author": {
    "name": "Message Systems, Inc."
  },
  "bugs": {
    "url": "https://github.com/SparkPost/node-sparkpost/issues"
  },
  "dependencies": {
    "lodash": "^4.17.2",
    "request": "^2.79.0"
  },
  "description": "A Node.js wrapper for interfacing with your favorite SparkPost APIs",
  "devDependencies": {
    "chai": "^3.5.0",
    "chai-as-promised": "^6.0.0",
    "coveralls": "^2.11.15",
    "eslint": "^3.12.2",
    "eslint-config-sparkpost": "^1.3.1",
    "istanbul": "^0.4.5",
    "mocha": "^3.2.0",
    "nock": "^9.0.0",
    "sinon": "^1.17.5",
    "sinon-as-promised": "^4.0.2",
    "sinon-chai": "^2.8.0"
  },
  "directories": {},
  "dist": {
    "shasum": "efeee98fa091598b4d6d72b32e487d7a86c7e95c",
    "tarball": "https://registry.npmjs.org/sparkpost/-/sparkpost-2.1.2.tgz"
  },
  "gitHead": "4c1a8b00569c34d42f3411b3e12ab3626cab910b",
  "homepage": "https://github.com/SparkPost/node-sparkpost",
  "keywords": [
    "email",
    "messaging"
  ],
  "license": "Apache-2.0",
  "main": "./lib/sparkpost.js",
  "maintainers": [
    {
      "name": "aydrian",
      "email": "aydrian@gmail.com"
    },
    {
      "name": "jmartin4563",
      "email": "jessica.martin@messagesystems.com"
    },
    {
      "name": "sparkpost",
      "email": "npmbuy@messagesystems.com"
    },
    {
      "name": "tnoel",
      "email": "tim.noel@messagesystems.com"
    }
  ],
  "name": "sparkpost",
  "optionalDependencies": {},
  "readme": "<a href=\"https://www.sparkpost.com\"><img src=\"https://www.sparkpost.com/sites/default/files/attachments/SparkPost_Logo_2-Color_Gray-Orange_RGB.svg\" width=\"200px\"/></a>\n\n[Sign up][sparkpost sign up] for a SparkPost account and visit our [Developer Hub](https://developers.sparkpost.com) for even more content.\n\n# Node.js Client Library\n\n[![Travis CI](https://travis-ci.org/SparkPost/node-sparkpost.svg?branch=master)](https://travis-ci.org/SparkPost/node-sparkpost) [![Coverage Status](https://coveralls.io/repos/SparkPost/node-sparkpost/badge.svg?branch=master&service=github)](https://coveralls.io/github/SparkPost/node-sparkpost?branch=master) [![NPM version](https://badge.fury.io/js/sparkpost.png)](http://badge.fury.io/js/sparkpost) [![Slack Status](http://slack.sparkpost.com/badge.svg)](http://slack.sparkpost.com)\n\nThe official Node.js binding for your favorite [SparkPost APIs](https://developers.sparkpost.com/api)!\n\n## Prerequisites\n\nBefore using this library, you must have:\n\n* A shiny new SparkPost Account, [sign up for a new account][sparkpost sign up] or [login to SparkPost](https://app.sparkpost.com/)\n* A valid SparkPost API Key. Check out our [Support Center](https://support.sparkpost.com/) for information on how to [create API keys](https://support.sparkpost.com/customer/portal/articles/1933377-create-api-keys)\n\n## Installation\n\n```\nnpm install sparkpost\n```\n\n*Note: Node.js versions 0.10 and 0.12 are no longer supported. For versions < 4, please continue using [sparkpost v1.3.8](https://github.com/SparkPost/node-sparkpost/tree/1.3.8)* \n\n## Initialization\n**new SparkPost(apiKey[, options])** - Initialization\n\n* `apiKey`\n    * Required: yes (unless key is stored in `SPARKPOST_API_KEY` environment variable)\n    * Type: `String`\n    * a passed in apiKey will take precedence over an environment variable\n* `options.origin` or `options.endpoint`\n    * Required: no\n    * Type: `String`\n    * Default: `https://api.sparkpost.com:443`\n* `options.apiVersion`\n    * Required: no\n    * Type: `String`\n    * Default: `v1`\n* `options.stackIdentity`\n    * Required: no\n    * Type: `String`\n    * An optional identifier to include in the User-Agent header. e.g. `product/1.0.0`\n* `options.headers`\n    * Required: no\n    * Type: `Object`\n    * set headers that apply to all requests\n* `options.debug`\n    * Required: no\n    * Type: `Boolean`\n    * Default: `false`\n    * appends full response from request client as `debug` when `true` for debugging purposes<br/>\n    *Note: This will expose your api key to the client-side. Do not use in production.*\n\n## Methods\n\n*Note: All methods return promises and accept an optional last argument callback. [Read about how we handle callbacks and promises](/docs/async.md).*\n\n* **request(options[, callback])**\n    * `options` - [see request modules options](https://github.com/mikeal/request#requestoptions-callback)\n    * `options.uri` - can either be a full url or a path that is appended to `options.origin` used at initialization ([url.resolve](http://nodejs.org/api/url.html#url_url_resolve_from_to))\n    * `options.debug` - setting to `true` includes full response from request client for debugging purposes\n* **get | post | put | delete(options[, callback])**\n    * `options` - see request options\n    * Request method will be overwritten and set to the same value as the name of these methods.\n\n## Creating a SparkPost Client\n\nPassing in an API key\n```js\nvar SparkPost = require('sparkpost');\nvar client = new SparkPost('YOUR_API_KEY');\n```\n\nUsing an API key stored in an environment variable\n```js\n//Create an env var as SPARKPOST_API_KEY\nvar SparkPost = require('sparkpost');\nvar client = new SparkPost();\n```\n\nSpecifying non-default options\n```js\nvar SparkPost = require('sparkpost');\nvar options = {\n  endpoint: 'https://dev.sparkpost.com:443'\n};\nvar client = new SparkPost('YOUR_API_KEY', options);\n```\n\n## Using the Node Client Library Base Object\nWe may not wrap every resource available in the SparkPost Client Library, for example the Node Client Library does not wrap the Metrics resource,\nbut you can use the Node Client Library Base Object to form requests to these unwrapped resources. Here is an example request using the\nbase object to make requests to the Metrics resource. Here is an example request using the base object to make requests to\nthe Metrics resource.\n\n```js\n// Get a list of domains that the Metrics API contains data on.\nvar options = {\n  uri: 'metrics/domains'\n};\n\nclient.get(options)\n  .then(data => {\n    console.log(data);\n  })\n  .catch(err => {\n    console.log(err);\n  });\n```\n\n## Send An Email \"Hello World\" Example\nBelow is an example of how to send a simple email. Sending an email is known as a *transmission*. By using the send \nmethod on the transmissions service that's available from the SparkPost object you instantiate, you can pass in an \nobject with all the [transmission attributes](https://developers.sparkpost.com/api/transmissions#header-transmission-attributes) \nrelevant to the email being sent. The send method will return a promise that will let you know if the email was sent \nsuccessful and if not information about the error that occurred. If a callback is passed, it will be executed.\n\n```javascript\nvar SparkPost = require('sparkpost');\nvar client = new SparkPost('<YOUR API KEY>');\n\nclient.transmissions.send({\n    content: {\n      from: 'testing@sparkpostbox.com',\n      subject: 'Hello, World!',\n      html:'<html><body><p>Testing SparkPost - the world\\'s most awesomest email service!</p></body></html>'\n    },\n    recipients: [\n      {address: '<YOUR EMAIL ADDRESS>'}\n    ]\n  })\n  .then(data => {\n    console.log('Woohoo! You just sent your first mailing!');\n    console.log(data);\n  })\n  .catch(err => {\n    console.log('Whoops! Something went wrong');\n    console.log(err);\n  });\n```\n\n## SparkPost API Resources Supported in Node Client Library\nClick on the desired API to see usage and more information\n\n* [Inbound Domains](/docs/resources/inboundDomains.md) - `client.inboundDomains` ([examples](/examples/inboundDomains))\n* [Message Events](/docs/resources/messageEvents.md) - `client.messageEvents` ([examples](/examples/messageEvents))\n* [Recipient Lists](/docs/resources/recipientLists.md) - `client.recipientLists` ([examples](/examples/recipientLists))\n* [Relay Webhooks](/docs/resources/relayWebhooks.md) - `client.relayWebhooks` ([examples](/examples/relayWebhooks))\n* [Sending Domains](/docs/resources/sendingDomains.md) - `client.sendingDomains` ([examples](/examples/sendingDomains))\n* [Subaccounts](/docs/resources/subaccounts.md) - `client.subaccounts` ([examples](/examples/subaccounts))\n* [Suppression List](/docs/resources/suppressionList.md) - `client.suppressionList` ([examples](/examples/suppressionList))\n* [Templates](/docs/resources/templates.md) - `client.templates` ([examples](/examples/templates))\n* [Transmissions](/docs/resources/transmissions.md) - `client.transmissions` ([examples](/examples/transmissions))\n* [Webhooks](/docs/resources/webhooks.md) - `client.webhooks` ([examples](/examples/webhooks))\n\n\n## Development\n\n### Setup\nRun `npm install` inside the repository to install all the dev dependencies.\n\n### Testing\nOnce all the dependencies are installed, you can execute the unit tests using `npm test`\n\n### Contributing\n[Guidelines for adding issues](docs/ADDING_ISSUES.md)\n\n[Our coding standards](docs/CODE_STYLE_GUIDE.md)\n\n[Submitting pull requests](CONTRIBUTING.md)\n\n### ChangeLog\n\n[See ChangeLog here](CHANGELOG.md)\n\n[sparkpost sign up]: https://app.sparkpost.com/sign-up?src=Dev-Website&sfdcid=701600000011daf\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/SparkPost/node-sparkpost.git"
  },
  "scripts": {
    "coveralls": "cat ./test/reports/lcov.info | coveralls",
    "postversion": "git push upstream && git push --tags upstream",
    "pretest": "eslint lib/**",
    "test": "istanbul cover --report lcov --dir test/reports/ _mocha --recursive ./test/spec --grep ./test/**/*.spec.js -- --colors --reporter spec"
  },
  "version": "2.1.2"
}
